{
  "address": "0x6138cbe47c9b2061c222183E82EE693Df6c03847",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6612e707b5998ac529b7315efbdd6224511c8ad6b4861727ee19c2fca4b30af1",
  "receipt": {
    "to": null,
    "from": "0x6f92a9801240fFC8C530697D217d1707087660A4",
    "contractAddress": "0x6138cbe47c9b2061c222183E82EE693Df6c03847",
    "transactionIndex": 12,
    "gasUsed": "1043435",
    "logsBloom": "0x
    "blockHash": "0x3d8224bf0cb8f241e5012a1821dc1e4370052e86abca328d0f2fbf005468648e",
    "transactionHash": "0x6612e707b5998ac529b7315efbdd6224511c8ad6b4861727ee19c2fca4b30af1",
    "logs": [],
    "blockNumber": 10945343,
    "cumulativeGasUsed": "2962448",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
  "numDeployments": 4,
  "solcInputHash": "f7c763b8f9b1d37ce93126652f9176a8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Simon Dong\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract from crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"this contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract from crowd funding\\n *  @author Simon Dong\\n *  @notice this contract is to demo a sample funding contract\\n *  @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n  // Type Declarations\\n  using PriceConverter for uint256;\\n\\n  // State Variables!\\n  address[] private s_funders;\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 1e18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n    if (msg.sender != i_owner) {\\n      revert FundMe__NotOwner();\\n    }\\n    _;\\n  }\\n\\n  // Functions Order:\\n  // constructor\\n  // receive\\n  // fallback\\n  // external\\n  // public\\n  // internal\\n  // private\\n  // view / pure\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) > MINIMUM_USD,\\n      \\\"Didn't send enough!\\\"\\n    );\\n    s_funders.push(msg.sender);\\n    s_addressToAmountFunded[msg.sender] = msg.value;\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success, \\\"Call  failed\\\");\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x6cc17d877a0456e2b3dd2e5536773f593056db1596f643ca453ccc7dc1d7a0b6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n \\n    (, int256 price, , , ) = priceFeed.latestRoundData();\\n    return uint256(price * 1e10);\\n  }\\n\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xac28c91bd778fac869e65cb51e826ea1930ff6bf17605cf7da6fd198f978b5b1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200130b3803806200130b833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61118562000186600039600081816101f101528181610440015281816105b801526107ae01526111856000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aa7565b6101a6565b6040516100b49190610aed565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b005b3480156100e057600080fd5b506100e961042f565b6040516100f69190610aed565b60405180910390f35b34801561010b57600080fd5b5061011461043c565b6040516101219190610b17565b60405180910390f35b34801561013657600080fd5b5061013f610464565b60405161014c9190610b91565b60405180910390f35b61015d61048e565b005b6101676105b6565b005b34801561017557600080fd5b50610190600480360381019061018b9190610bd8565b61087a565b60405161019d9190610b17565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610c63565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610cac565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f92919061099d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610d0c565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610d7e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c190919063ffffffff16565b1161050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610dea565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106be57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610674575b5050505050905060005b81518110156107495760008282815181106106e6576106e5610c05565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074190610c63565b9150506106c8565b50600067ffffffffffffffff81111561076557610764610cac565b5b6040519080825280602002602001820160405280156107935781602001602082028036833780820191505090505b50600090805190602001906107a992919061099d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f090610d0c565b60006040518083038185875af1925050503d806000811461082d576040519150601f19603f3d011682016040523d82523d6000602084013e610832565b606091505b5050905080610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d90610e56565b60405180910390fd5b5050565b600080828154811061088f5761088e610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108cd836108fd565b90506000670de0b6b3a764000085836108e69190610e76565b6108f09190610eff565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190610fbd565b5050509150506402540be400816109959190611038565b915050919050565b828054828255906000526020600020908101928215610a16579160200282015b82811115610a155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109bd565b5b509050610a239190610a27565b5090565b5b80821115610a40576000816000905550600101610a28565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7482610a49565b9050919050565b610a8481610a69565b8114610a8f57600080fd5b50565b600081359050610aa181610a7b565b92915050565b600060208284031215610abd57610abc610a44565b5b6000610acb84828501610a92565b91505092915050565b6000819050919050565b610ae781610ad4565b82525050565b6000602082019050610b026000830184610ade565b92915050565b610b1181610a69565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b6000819050919050565b6000610b57610b52610b4d84610a49565b610b32565b610a49565b9050919050565b6000610b6982610b3c565b9050919050565b6000610b7b82610b5e565b9050919050565b610b8b81610b70565b82525050565b6000602082019050610ba66000830184610b82565b92915050565b610bb581610ad4565b8114610bc057600080fd5b50565b600081359050610bd281610bac565b92915050565b600060208284031215610bee57610bed610a44565b5b6000610bfc84828501610bc3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610ad4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ca157610ca0610c34565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cf6600083610cdb565b9150610d0182610ce6565b600082019050919050565b6000610d1782610ce9565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d68600b83610d21565b9150610d7382610d32565b602082019050919050565b60006020820190508181036000830152610d9781610d5b565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610dd4601383610d21565b9150610ddf82610d9e565b602082019050919050565b60006020820190508181036000830152610e0381610dc7565b9050919050565b7f43616c6c20206661696c65640000000000000000000000000000000000000000600082015250565b6000610e40600c83610d21565b9150610e4b82610e0a565b602082019050919050565b60006020820190508181036000830152610e6f81610e33565b9050919050565b6000610e8182610ad4565b9150610e8c83610ad4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec557610ec4610c34565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0a82610ad4565b9150610f1583610ad4565b925082610f2557610f24610ed0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4f81610f30565b8114610f5a57600080fd5b50565b600081519050610f6c81610f46565b92915050565b6000819050919050565b610f8581610f72565b8114610f9057600080fd5b50565b600081519050610fa281610f7c565b92915050565b600081519050610fb781610bac565b92915050565b600080600080600060a08688031215610fd957610fd8610a44565b5b6000610fe788828901610f5d565b9550506020610ff888828901610f93565b945050604061100988828901610fa8565b935050606061101a88828901610fa8565b925050608061102b88828901610f5d565b9150509295509295909350565b600061104382610f72565b915061104e83610f72565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108d5761108c610c34565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ca576110c9610c34565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110757611106610c34565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114457611143610c34565b5b82820290509291505056fea2646970667358221220dfa7269988ff0591907b93a9683ff8f57d0c223ad2c833d1cecdd34d4a17f25364736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aa7565b6101a6565b6040516100b49190610aed565b60405180910390f35b3480156100c957600080fd5b506100d26101ef565b005b3480156100e057600080fd5b506100e961042f565b6040516100f69190610aed565b60405180910390f35b34801561010b57600080fd5b5061011461043c565b6040516101219190610b17565b60405180910390f35b34801561013657600080fd5b5061013f610464565b60405161014c9190610b91565b60405180910390f35b61015d61048e565b005b6101676105b6565b005b34801561017557600080fd5b50610190600480360381019061018b9190610bd8565b61087a565b60405161019d9190610b17565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610274576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031f57600080828154811061029957610298610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031790610c63565b915050610277565b50600067ffffffffffffffff81111561033b5761033a610cac565b5b6040519080825280602002602001820160405280156103695781602001602082028036833780820191505090505b506000908051906020019061037f92919061099d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a690610d0c565b60006040518083038185875af1925050503d80600081146103e3576040519150601f19603f3d011682016040523d82523d6000602084013e6103e8565b606091505b505090508061042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390610d7e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c190919063ffffffff16565b1161050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610dea565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461063b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106be57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610674575b5050505050905060005b81518110156107495760008282815181106106e6576106e5610c05565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074190610c63565b9150506106c8565b50600067ffffffffffffffff81111561076557610764610cac565b5b6040519080825280602002602001820160405280156107935781602001602082028036833780820191505090505b50600090805190602001906107a992919061099d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107f090610d0c565b60006040518083038185875af1925050503d806000811461082d576040519150601f19603f3d011682016040523d82523d6000602084013e610832565b606091505b5050905080610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d90610e56565b60405180910390fd5b5050565b600080828154811061088f5761088e610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108cd836108fd565b90506000670de0b6b3a764000085836108e69190610e76565b6108f09190610eff565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190610fbd565b5050509150506402540be400816109959190611038565b915050919050565b828054828255906000526020600020908101928215610a16579160200282015b82811115610a155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109bd565b5b509050610a239190610a27565b5090565b5b80821115610a40576000816000905550600101610a28565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7482610a49565b9050919050565b610a8481610a69565b8114610a8f57600080fd5b50565b600081359050610aa181610a7b565b92915050565b600060208284031215610abd57610abc610a44565b5b6000610acb84828501610a92565b91505092915050565b6000819050919050565b610ae781610ad4565b82525050565b6000602082019050610b026000830184610ade565b92915050565b610b1181610a69565b82525050565b6000602082019050610b2c6000830184610b08565b92915050565b6000819050919050565b6000610b57610b52610b4d84610a49565b610b32565b610a49565b9050919050565b6000610b6982610b3c565b9050919050565b6000610b7b82610b5e565b9050919050565b610b8b81610b70565b82525050565b6000602082019050610ba66000830184610b82565b92915050565b610bb581610ad4565b8114610bc057600080fd5b50565b600081359050610bd281610bac565b92915050565b600060208284031215610bee57610bed610a44565b5b6000610bfc84828501610bc3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610ad4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ca157610ca0610c34565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cf6600083610cdb565b9150610d0182610ce6565b600082019050919050565b6000610d1782610ce9565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d68600b83610d21565b9150610d7382610d32565b602082019050919050565b60006020820190508181036000830152610d9781610d5b565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610dd4601383610d21565b9150610ddf82610d9e565b602082019050919050565b60006020820190508181036000830152610e0381610dc7565b9050919050565b7f43616c6c20206661696c65640000000000000000000000000000000000000000600082015250565b6000610e40600c83610d21565b9150610e4b82610e0a565b602082019050919050565b60006020820190508181036000830152610e6f81610e33565b9050919050565b6000610e8182610ad4565b9150610e8c83610ad4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec557610ec4610c34565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f0a82610ad4565b9150610f1583610ad4565b925082610f2557610f24610ed0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f4f81610f30565b8114610f5a57600080fd5b50565b600081519050610f6c81610f46565b92915050565b6000819050919050565b610f8581610f72565b8114610f9057600080fd5b50565b600081519050610fa281610f7c565b92915050565b600081519050610fb781610bac565b92915050565b600080600080600060a08688031215610fd957610fd8610a44565b5b6000610fe788828901610f5d565b9550506020610ff888828901610f93565b945050604061100988828901610fa8565b935050606061101a88828901610fa8565b925050608061102b88828901610f5d565b9150509295509295909350565b600061104382610f72565b915061104e83610f72565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561108d5761108c610c34565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ca576110c9610c34565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110757611106610c34565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114457611143610c34565b5b82820290509291505056fea2646970667358221220dfa7269988ff0591907b93a9683ff8f57d0c223ad2c833d1cecdd34d4a17f25364736f6c63430008080033",
  "devdoc": {
    "author": "Simon Dong",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract from crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "this contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
